2. Permutation problem
4. Bucket sort
5. Radix Bucket sort
6.Deques Input Restricted Output Restricted
7.positive Affects Negative Implement Deque for
    push(10)
    push(5)
    enq(6)
    enq(7)
    push(3)
    pop
    Deq
    enq(9)
8. Dequeue
    N 17 I T 9 C 20 S 21 E 
9. Knight Reach
10.Loop in Linked List
11.l1 U l2
12. l1 intersection l2
13.Recursive function - single function for min, max, average of an Array
14. Recursive Selection sort , Bubble sort
15.Given a nonnegative integer n, write a function that lists all strings formed from exactly       n     pairs of balanced parentheses. For example, given n = 3, you'd list these five strings:

((( )))    (( )( ))    (( ))( )   ( )(( ))   ( )( )( )

    As a hint, given any string of n≥ 1 balanced parenthesis, focus on the first open parentheses and the close parentheses it matches.

16. Given a number n, generate all distinct ways to write n as the sum of positive integers. For example, with n = 4, the options are 4, 3 + 1, 2 + 2, 2 + 1 + 1, and 1 + 1 + 1 + 1.

 17. Sort 1- 3
 18. Sort 1- 4
 19. Sort 1- 5
 20. sort an array with many duplicated Values : Given an array with many duplicated elements, sort it in linear time where the order of equal elements doesn’t matter.
For example,
Input: { 4, 2, 40, 10, 10, 1, 4, 2, 1, 10, 40 }
Output: { 1, 1, 2, 2, 4, 4, 10, 10, 10, 40, 40 }

21.Merge two arrays by satisfying given constraints
Given two sorted arrays X[] and Y[] of size m and n each where m >= n and X[] has exactly n vacant cells, merge elements of Y[] in their correct position in array X[] i.e. merge (X, Y) by keeping the sorted order.
For example,
Input:
X[] = { 0, 2, 0, 3, 0, 5, 6, 0, 0}
Y[] = { 1, 8, 9, 10, 15 }
The vacant cells in X[] is represented by 0 Output:
X[] = { 1, 2, 3, 5, 6, 8, 9, 10, 15 }

22.In-place merge two sorted arrays: Given two sorted arrays X[] and Y[] of size m and n each, merge elements of X[] with elements of array Y[] by maintaining the sorted order. i.e. fill X[] with first m smallest elements and fill Y[] with remaining elements.
The conversion should be done in-place and without using any other data structure.
For example,
Input:
X[] = { 1, 4, 7, 8, 10 } Y[] = { 2, 3, 9 } Output:
X[] = { 1, 2, 3, 4, 7 } Y[] = { 8, 9, 10 }

23. Bubble Sort using 1 Stack and 5 variables

24. Iterative Quick Sort
25. Largest Rectangle using Stack
26.Interleave the first half of the queue with second half

 Given a queue of integers of even length, rearrange the elements by interleaving the first half of the queue with the second half of the queue. You can use only one stack can be used as an additional space.

 

Examples:     Input :  1 2 3 4

                    Output : 1 3 2 4

 

Input :   11  12  13  14  15  16  17  18  19  20

Output : 11  16  12  17  13  18  14  19  15  20

27. Generate Binary numbers from 1 to n using a Queue

28.Sort a Queue (recursion)

29. Generic Queue Recheck 